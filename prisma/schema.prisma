generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified String?
  image         String?
  accounts      Account[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // custom fields
  stripeCustomerId String?       @unique
  subscription     Subscription?
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Plan {
  id                 String   @id @default(cuid())
  name               PlanType @unique @default(MONTHLY)
  createdAt          DateTime @default(now())
  priceCentsUSD      Int      @default(500) // 5$
  textTokensIncluded Int      @default(1000000) // 1M
  ttsSecondsIncluded Int      @default(3600) // 1h

  subscriptions Subscription[]
}

model Subscription {
  id                  String             @id @default(cuid())
  userId              String             @unique
  planId              String
  currentPeriodEnd    DateTime
  tokensUsedThisCycle Int                @default(0)
  ttsSecondsUsedCycle Int                @default(0)
  status              SubscriptionStatus @default(ACTIVE)

  user User @relation(fields: [userId], references: [id])
  plan Plan @relation(fields: [planId], references: [id])
}

enum PlanType {
  MONTHLY
}

enum SubscriptionStatus {
  ACTIVE
  PAST_DUE
  CANCELED
}
